{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "SingleEc2Stack": {
        "id": "SingleEc2Stack",
        "path": "SingleEc2Stack",
        "children": {
          "VPC": {
            "id": "VPC",
            "path": "SingleEc2Stack/VPC",
            "children": {
              "PublicSubnet1": {
                "id": "PublicSubnet1",
                "path": "SingleEc2Stack/VPC/PublicSubnet1",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.140.0"
                }
              },
              "PublicSubnet2": {
                "id": "PublicSubnet2",
                "path": "SingleEc2Stack/VPC/PublicSubnet2",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.140.0"
                }
              },
              "PublicSubnet3": {
                "id": "PublicSubnet3",
                "path": "SingleEc2Stack/VPC/PublicSubnet3",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.140.0"
                }
              },
              "PrivateSubnet1": {
                "id": "PrivateSubnet1",
                "path": "SingleEc2Stack/VPC/PrivateSubnet1",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.140.0"
                }
              },
              "PrivateSubnet2": {
                "id": "PrivateSubnet2",
                "path": "SingleEc2Stack/VPC/PrivateSubnet2",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.140.0"
                }
              },
              "PrivateSubnet3": {
                "id": "PrivateSubnet3",
                "path": "SingleEc2Stack/VPC/PrivateSubnet3",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.140.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.140.0"
            }
          },
          "SelfDestructLambda": {
            "id": "SelfDestructLambda",
            "path": "SingleEc2Stack/SelfDestructLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "SingleEc2Stack/SelfDestructLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "SingleEc2Stack/SelfDestructLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.140.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "SingleEc2Stack/SelfDestructLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.140.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.140.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "SingleEc2Stack/SelfDestructLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "zipFile": "\nimport boto3\ndef handler(event, context):\n    cloudformation = boto3.client('cloudformation')\n    cloudformation.delete_stack(StackName='SingleEc2Stack-dev')\n        "
                    },
                    "environment": {
                      "variables": {
                        "STACK_NAME": "SingleEc2Stack-dev"
                      }
                    },
                    "handler": "index.handler",
                    "role": {
                      "Fn::GetAtt": [
                        "SelfDestructLambdaServiceRole30C72166",
                        "Arn"
                      ]
                    },
                    "runtime": "python3.9"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.140.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.140.0"
            }
          },
          "SelfDestructRule": {
            "id": "SelfDestructRule",
            "path": "SingleEc2Stack/SelfDestructRule",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SingleEc2Stack/SelfDestructRule/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                  "aws:cdk:cloudformation:props": {
                    "scheduleExpression": "rate(1 hour)",
                    "state": "ENABLED",
                    "targets": [
                      {
                        "id": "Target0",
                        "arn": {
                          "Fn::GetAtt": [
                            "SelfDestructLambdaFD015707",
                            "Arn"
                          ]
                        }
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_events.CfnRule",
                  "version": "2.140.0"
                }
              },
              "AllowEventRuleSingleEc2StackSelfDestructLambda0953998A": {
                "id": "AllowEventRuleSingleEc2StackSelfDestructLambda0953998A",
                "path": "SingleEc2Stack/SelfDestructRule/AllowEventRuleSingleEc2StackSelfDestructLambda0953998A",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "SelfDestructLambdaFD015707",
                        "Arn"
                      ]
                    },
                    "principal": "events.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "SelfDestructRule02A1E133",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.140.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_events.Rule",
              "version": "2.140.0"
            }
          },
          "anasdev-role": {
            "id": "anasdev-role",
            "path": "SingleEc2Stack/anasdev-role",
            "children": {
              "Importanasdev-role": {
                "id": "Importanasdev-role",
                "path": "SingleEc2Stack/anasdev-role/Importanasdev-role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.140.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "SingleEc2Stack/anasdev-role/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "ec2.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AmazonSSMManagedInstanceCore"
                          ]
                        ]
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                  "version": "2.140.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Role",
              "version": "2.140.0"
            }
          },
          "dnsPolicy": {
            "id": "dnsPolicy",
            "path": "SingleEc2Stack/dnsPolicy",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SingleEc2Stack/dnsPolicy/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                  "aws:cdk:cloudformation:props": {
                    "policyDocument": {
                      "Statement": [
                        {
                          "Action": "route53:GetChange",
                          "Effect": "Allow",
                          "Resource": "arn:aws:route53:::hostedzone/"
                        },
                        {
                          "Action": "route53:ChangeResourceRecordSets",
                          "Effect": "Allow",
                          "Resource": "arn:aws:route53:::hostedzone/"
                        },
                        {
                          "Action": "route53:GetHostedZone",
                          "Effect": "Allow",
                          "Resource": "arn:aws:route53:::hostedzone/"
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "policyName": "dnsPolicy90BE57CE",
                    "roles": [
                      {
                        "Ref": "anasdevrole50B19CF8"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                  "version": "2.140.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Policy",
              "version": "2.140.0"
            }
          },
          "ssmPolicy": {
            "id": "ssmPolicy",
            "path": "SingleEc2Stack/ssmPolicy",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SingleEc2Stack/ssmPolicy/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                  "aws:cdk:cloudformation:props": {
                    "policyDocument": {
                      "Statement": [
                        {
                          "Action": [
                            "ssm:UpdateInstanceInformation",
                            "ssmmessages:CreateControlChannel",
                            "ssmmessages:CreateDataChannel",
                            "ssmmessages:OpenControlChannel",
                            "ssmmessages:OpenDataChannel"
                          ],
                          "Effect": "Allow",
                          "Resource": "*"
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "policyName": "ssmPolicy178E7BD0",
                    "roles": [
                      {
                        "Ref": "anasdevrole50B19CF8"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                  "version": "2.140.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Policy",
              "version": "2.140.0"
            }
          },
          "anasdevsg": {
            "id": "anasdevsg",
            "path": "SingleEc2Stack/anasdevsg",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SingleEc2Stack/anasdevsg/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                  "aws:cdk:cloudformation:props": {
                    "groupDescription": "SingleEc2Stack/anasdevsg",
                    "groupName": "anasdev-sg",
                    "securityGroupEgress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "description": "Allow all outbound traffic by default",
                        "ipProtocol": "-1"
                      }
                    ],
                    "vpcId": "vpc-0d44a946489030483"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                  "version": "2.140.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
              "version": "2.140.0"
            }
          },
          "anasdev": {
            "id": "anasdev",
            "path": "SingleEc2Stack/anasdev",
            "children": {
              "InstanceProfile": {
                "id": "InstanceProfile",
                "path": "SingleEc2Stack/anasdev/InstanceProfile",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                  "aws:cdk:cloudformation:props": {
                    "roles": [
                      {
                        "Ref": "anasdevrole50B19CF8"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnInstanceProfile",
                  "version": "2.140.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "SingleEc2Stack/anasdev/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::Instance",
                  "aws:cdk:cloudformation:props": {
                    "availabilityZone": "us-east-1a",
                    "blockDeviceMappings": [
                      {
                        "deviceName": "/dev/xvda",
                        "ebs": {
                          "volumeSize": 100
                        }
                      }
                    ],
                    "iamInstanceProfile": {
                      "Ref": "anasdevInstanceProfileA1A918F5"
                    },
                    "imageId": {
                      "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
                    },
                    "instanceType": "t3.micro",
                    "securityGroupIds": [
                      {
                        "Fn::GetAtt": [
                          "anasdevsg66F650D8",
                          "GroupId"
                        ]
                      }
                    ],
                    "subnetId": "subnet-0981e78cc29741361",
                    "tags": [
                      {
                        "key": "domainName",
                        "value": ""
                      },
                      {
                        "key": "ec2Name",
                        "value": "anasdev"
                      },
                      {
                        "key": "hostedZoneID",
                        "value": ""
                      },
                      {
                        "key": "keyFile",
                        "value": "/home/anashakt/.ssh/id_rsa.pub"
                      },
                      {
                        "key": "keyName",
                        "value": "anasnec"
                      },
                      {
                        "key": "Name",
                        "value": "anasdev"
                      },
                      {
                        "key": "nickName",
                        "value": "anasdev"
                      }
                    ],
                    "userData": {
                      "Fn::Base64": "#!/bin/bash\n#! /bin/bash -x\n# install critial tools\nsudo yum -y update\nsudo yum remove -y awscli # remove v1 to make way to install v2\nsudo yum -y install expect jq curl git\n# install AWS CLI\nwget \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -O \"awscliv2.zip\"\nunzip -o awscliv2.zip\nsudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update\nrm -Rf aws awscliv2.zip\n# install SAM\nwget https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip -O sam.zip\nunzip sam.zip -o -d sam-installation\nsudo ./sam-installation/install\nsam --version\nrm -Rf ./sam-installation sam.zip\n# install NVM\nexport HOME=/usr/local/bin\ncd /usr/local/bin\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash\ncat << \"EOF\" >> /etc/profile\nNVM_DIR=/usr/local/bin/.nvm\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"\neval `ssh-agent -s`\nfor i in $HOME/.ssh/*.pem;\ndo\n    [ -f \"$i\" ] || break\n    ssh-add $i\ndone\nEOF\n\nexport HOME=/root\ncat << \"EOF\" >> $HOME/.bashrc\nsource /etc/profile\nsource $NVM_DIR/nvm.sh\nEOF\nsource $HOME/.bashrc\n\nnvm install 16\nnvm use 16\nnpm install -g npm nodejs typescript aws-sdk aws-cdk yarn\n\n# set local variables\nINSTANCE_ID=$(wget -qO- http://instance-data/latest/meta-data/instance-id)\nHOST=`aws ec2 describe-tags --filters \"Name=resource-id,Values=$INSTANCE_ID\" \"Name=key,Values=nickName\" | jq -r .Tags[].Value`\nDOMAIN=`aws ec2 describe-tags --filters \"Name=resource-id,Values=$INSTANCE_ID\" \"Name=key,Values=domainName\" | jq -r .Tags[].Value`\necho \"preserve_hostname: true\" >> /etc/cloud/cloud.cfg\nhostnamectl set-hostname $HOST.$DOMAIN\necho \"ssh-add $KEYFILE\" >> /etc/profile\n# configure DNS\ntouch /var/lib/cloud/scripts/per-boot/set-dns\nchmod +x /var/lib/cloud/scripts/per-boot/set-dns\ncat << \"EOF\" > /var/lib/cloud/scripts/per-boot/set-dns\n#!/bin/bash\nINSTANCE_ID=$(wget -qO- http://instance-data/latest/meta-data/instance-id)\nMY_IP=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4/)\nDOMAIN=`aws ec2 describe-tags --filters \"Name=resource-id,Values=$INSTANCE_ID\" \"Name=key,Values=domainName\" | jq -r .Tags[].Value`\nHOST=`aws ec2 describe-tags --filters \"Name=resource-id,Values=$INSTANCE_ID\" \"Name=key,Values=nickName\" | jq -r .Tags[].Value`\nFQDN=$HOST.$DOMAIN\n/usr/local/bin/aws route53 change-resource-record-sets --hosted-zone-id \n --change-batch '{\n    \"Changes\":[{\n        \"Action\":\"UPSERT\",\n        \"ResourceRecordSet\":{\n            \"Name\": \"'$FQDN'\",\n            \"Type\":\"A\",\n            \"TTL\":10,\n            \"ResourceRecords\":[\n                {\n                    \"Value\": \"'$MY_IP'\"\n                }\n            ]\n        }\n        }]\n}'\nEOF\nvar/lib/cloud/scripts/per-boot/set-dns\n\n# to inspect what this script did, inspect /var/log/cloud-init-output.log\n\n\n\nmkdir -p  /home/ssm-user/.ssh; echo \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDHG9wbBDQm4jAJYccVZ7QFspGbIQGotLo1dIZvz1prppP2U4LrXy85hdPUa7BkxndMJ322i3eKeqLXrNE7hFEK65xdcZ4Cxb06FJJuAuN3blTmpv7frfR0PVXSS5nXXS1G/UeTwPEF/hT8k+908fyS+G0dnZLg/jwgnIOjFZRjX95WylW26CuYoW3ghsINkAkMcJTcvGxkDA3+1I1t1UfWEFKoOTi3ybSVAlIqWdVa5FPSW7eUIn8bJH64O4eTKvtvfVpQ1KpzrzOohlnTl6feibTcfXgYcSa0c0V2O3pIlHa1Y0hYa1sO5so91QRzmd3IdpUltjkY8zluvn6iZE6GK7Rp960oufL33cv27PmRzIdkxpjdiT/Hgr5iEZ6aPpVV77pcQdReTpdnSdg9j/CKD9ltHFzz0l/sj6kz1bISFidr0XD3N7wyBY0411YoOG/P5Z33/Ho1JSw4B/+3RTKydO6YCn/Tw9f1EkzsH3CItTwr0Wmxz0CXuBViQY52ecCDMpek36bh7vzA7BhF/M2VIMmeMiHZ4MWMkjxOvDwGOFLvLMrhEp0ZbU2V2zwdaX80sCTalIC7Qc5FaiFRSuJ/hmvaF+kS2/P51vnBepNgja1FIGJ/OhveUuT8Wq/tKuQm+BgDkmLhaiVCLfvvS0Pgh/MWI8TW02Tub+pYAsLkdw== anashakt@SEA-1801064134\" >> /home/ssm-user/.ssh/authorized_keys\n#! /bin/bash -x\n# install critial tools\nsudo yum -y update\nsudo yum remove -y awscli # remove v1 to make way to install v2\nsudo yum -y install expect jq curl git\n# install AWS CLI\nwget \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -O \"awscliv2.zip\"\nunzip -o awscliv2.zip\nsudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update\nrm -Rf aws awscliv2.zip\n# install SAM\nwget https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip -O sam.zip\nunzip sam.zip -o -d sam-installation\nsudo ./sam-installation/install\nsam --version\nrm -Rf ./sam-installation sam.zip\n# install NVM\nexport HOME=/usr/local/bin\ncd /usr/local/bin\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash\ncat << \"EOF\" >> /etc/profile\nNVM_DIR=/usr/local/bin/.nvm\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"\neval `ssh-agent -s`\nfor i in $HOME/.ssh/*.pem;\ndo\n    [ -f \"$i\" ] || break\n    ssh-add $i\ndone\nEOF\n\nexport HOME=/root\ncat << \"EOF\" >> $HOME/.bashrc\nsource /etc/profile\nsource $NVM_DIR/nvm.sh\nEOF\nsource $HOME/.bashrc\n\nnvm install 16\nnvm use 16\nnpm install -g npm nodejs typescript aws-sdk aws-cdk yarn\n\n# set local variables\nINSTANCE_ID=$(wget -qO- http://instance-data/latest/meta-data/instance-id)\nHOST=`aws ec2 describe-tags --filters \"Name=resource-id,Values=$INSTANCE_ID\" \"Name=key,Values=nickName\" | jq -r .Tags[].Value`\nDOMAIN=`aws ec2 describe-tags --filters \"Name=resource-id,Values=$INSTANCE_ID\" \"Name=key,Values=domainName\" | jq -r .Tags[].Value`\necho \"preserve_hostname: true\" >> /etc/cloud/cloud.cfg\nhostnamectl set-hostname $HOST.$DOMAIN\necho \"ssh-add $KEYFILE\" >> /etc/profile\n# configure DNS\ntouch /var/lib/cloud/scripts/per-boot/set-dns\nchmod +x /var/lib/cloud/scripts/per-boot/set-dns\ncat << \"EOF\" > /var/lib/cloud/scripts/per-boot/set-dns\n#!/bin/bash\nINSTANCE_ID=$(wget -qO- http://instance-data/latest/meta-data/instance-id)\nMY_IP=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4/)\nDOMAIN=`aws ec2 describe-tags --filters \"Name=resource-id,Values=$INSTANCE_ID\" \"Name=key,Values=domainName\" | jq -r .Tags[].Value`\nHOST=`aws ec2 describe-tags --filters \"Name=resource-id,Values=$INSTANCE_ID\" \"Name=key,Values=nickName\" | jq -r .Tags[].Value`\nFQDN=$HOST.$DOMAIN\n/usr/local/bin/aws route53 change-resource-record-sets --hosted-zone-id \n --change-batch '{\n    \"Changes\":[{\n        \"Action\":\"UPSERT\",\n        \"ResourceRecordSet\":{\n            \"Name\": \"'$FQDN'\",\n            \"Type\":\"A\",\n            \"TTL\":10,\n            \"ResourceRecords\":[\n                {\n                    \"Value\": \"'$MY_IP'\"\n                }\n            ]\n        }\n        }]\n}'\nEOF\nvar/lib/cloud/scripts/per-boot/set-dns\n\n# to inspect what this script did, inspect /var/log/cloud-init-output.log\n\n\n"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnInstance",
                  "version": "2.140.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.Instance",
              "version": "2.140.0"
            }
          },
          "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": {
            "id": "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "path": "SingleEc2Stack/SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.140.0"
            }
          },
          "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118": {
            "id": "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "path": "SingleEc2Stack/SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.140.0"
            }
          },
          "tagPollicy": {
            "id": "tagPollicy",
            "path": "SingleEc2Stack/tagPollicy",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SingleEc2Stack/tagPollicy/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                  "aws:cdk:cloudformation:props": {
                    "policyDocument": {
                      "Statement": [
                        {
                          "Action": "ec2:DescribeTags",
                          "Effect": "Allow",
                          "Resource": {
                            "Fn::Join": [
                              "",
                              [
                                "arn:aws:ec2:us-east-1:173630595002:instance/",
                                {
                                  "Ref": "anasdev44D0FC15"
                                }
                              ]
                            ]
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "policyName": "tagPollicy47586843",
                    "roles": [
                      {
                        "Ref": "anasdevrole50B19CF8"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                  "version": "2.140.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Policy",
              "version": "2.140.0"
            }
          },
          "ec2-instance-id": {
            "id": "ec2-instance-id",
            "path": "SingleEc2Stack/ec2-instance-id",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.140.0"
            }
          },
          "ec2-instance-public-dnsname": {
            "id": "ec2-instance-public-dnsname",
            "path": "SingleEc2Stack/ec2-instance-public-dnsname",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.140.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "SingleEc2Stack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "SingleEc2Stack/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.140.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.3.0"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "SingleEc2Stack/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.140.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "SingleEc2Stack/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.140.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.140.0"
        }
      },
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.3.0"
        }
      }
    },
    "constructInfo": {
      "fqn": "aws-cdk-lib.App",
      "version": "2.140.0"
    }
  }
}
